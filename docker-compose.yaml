services:
  zookeeper:
    image: zookeeper # Updated to a newer version
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1  # Updated to a newer version
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092  # Added KAFKA_LISTENERS environment variable
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD", "kafka-broker-api-versions", "--bootstrap-server", "kafka:9092" ]
      interval: 10s
      timeout: 5s
      retries: 100

  mongodb:
    image: mongo:5.0  # Updated to a more recent stable version
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 100

  neo4j:
    image: neo4j:4.4.12  # Updated to a more recent version
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/test
    volumes:
      - neo4j-data:/data
    healthcheck:
      test: ["CMD", "curl", "-sS", "http://localhost:7474"]
      interval: 30s
      timeout: 10s
      retries: 100


  redis:
    image: redis:6.2.6  # Updated to a more recent version
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 100

  fastapi:
    build: .
    container_name: fastapi
    ports:
      - "8000:8000"
    depends_on:
      mongodb:
        condition: service_healthy
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy


volumes:
  mongo-data:
  neo4j-data:
